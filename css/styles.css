/* Global */
body {
  margin: 0;
  overflow: hidden;
  font-family: Arial, sans-serif;
}

/* Controls container, now handled by <Controls /> in React */
.controls {
  position: fixed;
  top: 10px;
  left: 10px;
  z-index: 1000;
  background: rgba(255, 255, 255, 0.9);
  padding: 10px;
  border-radius: 5px;
  display: flex;
  align-items: center;
  gap: 10px;
}

/* Zoom controls inside .controls */
.zoom-controls {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: 10px;
}

.zoom-controls button {
  width: 30px;
  height: 30px;
  font-size: 18px;
  padding: 0;
  cursor: pointer;
}

/* Container for your tabletop, typically 100% of viewport */
/* Note: Actual sizing is handled by the layout grid in App.jsx */
#tabletop-container {
  width: 100%; /* Should take 100% of its grid area */
  height: 100%;
  overflow: hidden;
  background: #f0f0f0;
  position: relative;
}

/* The main tabletop element that gets panned/zoomed */
#tabletop {
  position: absolute;
  transform-origin: 0 0;
}

/* Cursor style when panning (grabbing) */
#tabletop.grabbing {
  cursor: grabbing;
}

/* Base grid cell styles (used by Grid component) */
.grid-cell {
  position: absolute;
  box-sizing: border-box;
}

/* Square grid specific (when isHexGrid = false) */
/* Note: Grid component now draws squares using SVG pattern */

/* Hex grid specific (when isHexGrid = true) */
/* Note: Grid component now draws hexes using SVG paths */


/* Token styles */
.token {
  position: absolute;
  width: 40px; /* Adjust based on desired token size relative to grid */
  height: 40px; /* Adjust based on desired token size relative to grid */
  border-radius: 50%;
  background: red; /* Default placeholder color */
  transform: translate(-50%, -50%); /* Center the token on its {x,y} point */
  cursor: move;
  z-index: 100; /* Ensure tokens are above grid */
  box-sizing: border-box; /* Include border/padding in size */
}

.token.selected {
  outline: 2px solid #007bff;
  outline-offset: 2px;
}

/* Selection marquee (used by useTokenSelection) */
.marquee {
  position: absolute;
  border: 2px solid #3498db;
  background-color: rgba(52, 152, 219, 0.1);
  pointer-events: none; /* Cannot interact with elements under the marquee */
  z-index: 10000; /* Ensure marquee is on top */
}

/* Context menu */
.context-menu {
  position: fixed; /* Positioning handled by JS */
  background: white;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 4px 0;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  z-index: 9999;
  min-width: 120px;
  pointer-events: auto;
  user-select: none;
}

.context-menu-item {
  padding: 8px 12px;
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s;
}

.context-menu-item:hover {
  background-color: #f0f0f0;
}

/* A debug or version display element (optional) */
#version-display {
  position: fixed;
  bottom: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 5px 10px;
  border-radius: 3px;
  font-family: monospace;
  z-index: 1000;
}

/*
  ----------------------------------------
   3-COLUMN GRID LAYOUT FOR THE ENTIRE APP
  ----------------------------------------
*/

/* The main app container uses CSS Grid */
.app-layout {
  display: grid;
  /* Define grid columns: left toolbar (fixed), main content (flexible), right sidebar (fixed/flexible) */
  /* This matches the grid-template-columns definition in App.jsx */
  /* grid-template-columns: 60px 1fr 350px; */ /* Defined in JS */
  grid-template-rows: 100%;
  grid-template-areas: "tools-bar main-content right-sidebar";

  width: 100vw;
  height: 100vh;
  overflow: hidden; /* Prevent scrollbars on the main layout */
}

/* Left column: Tools bar (icons, drawing, etc.) */
.tools-bar {
  grid-area: tools-bar;
  background-color: #f5f5f5;
  border-right: 1px solid #ccc;
  display: flex;
  flex-direction: column;
  align-items: center; /* Center icons horizontally */
  padding-top: 10px;
  overflow-y: auto; /* Allow scrolling if toolbar is tall */
}

/* Middle column: the main game area */
.main-content {
  grid-area: main-content;
  position: relative;
  background: #eaeaea;
  overflow: hidden; /* The ZoomableContainer handles its own overflow */
}

/* Right column: Chat, DM Tools, character sheets, etc. Handled by Sidebar */
.right-sidebar {
  grid-area: right-sidebar;
  background-color: #fff;
  border-left: 1px solid #ccc;
  overflow-y: auto; /* Allow scrolling within the sidebar */
  display: flex; /* Use flex for internal layout (collapse button + content) */
  flex-direction: row-reverse; /* Puts collapse button on the left edge of the sidebar */
  transition: width 0.3s ease; /* Smooth collapse/expand animation */
}

.right-sidebar.collapsed {
  width: 12px !important; /* Adjust width for collapsed state */
  min-width: 12px !important;
  flex-direction: row; /* Put button on the right edge when collapsed */
}

.sidebar-content {
  flex-grow: 1; /* Content takes remaining space */
  overflow-y: auto; /* Allow content to scroll */
  display: flex;
  flex-direction: column;
  height: 100%; /* Important for flex layout */
}

.sidebar-tabs {
  display: flex;
  border-bottom: 1px solid #ccc;
  flex-shrink: 0; /* Don't shrink tabs */
}

.sidebar-tab-button {
  flex: 1;
  padding: 8px 12px;
  text-align: center;
  cursor: pointer;
  border: none;
  background: none;
  transition: background-color 0.2s, border-bottom-color 0.2s, color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sidebar-tab-button.active {
  border-bottom: 2px solid #007bff;
  color: #007bff;
  background-color: #f0f0f0;
}

.sidebar-content-area {
  flex-grow: 1; /* Content fills remaining space */
  overflow-y: auto;
  padding: 16px; /* Added padding */
  display: flex;
  flex-direction: column;
}

.chat-messages {
  flex-grow: 1;
  overflow-y: auto; /* Chat messages scroll internally */
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.chat-input-area {
  flex-shrink: 0; /* Input doesn't shrink */
  padding-top: 8px;
  border-top: 1px solid #ccc;
}

.chat-input-area input {
  width: 100%;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.chat-quick-rolls {
    display: flex;
    gap: 4px;
    justify-content: center;
    margin-top: 8px;
}

.chat-quick-rolls button {
    padding: 4px 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    cursor: pointer;
    background-color: #eee;
    font-size: 0.8em;
}
.chat-quick-rolls button:hover {
    background-color: #ddd;
}


.combat-log {
  flex-grow: 1;
  overflow-y: auto; /* Combat log scrolls internally */
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.combat-log-item {
  padding: 8px;
  background-color: #f9f9f9;
  border-radius: 4px;
  font-size: 0.9em;
  border-left: 3px solid #007bff;
}

.combat-log-item div:first-child {
  font-weight: bold;
}


/* Example class for icon buttons in left column */
.tool-icon {
  width: 40px;
  height: 40px;
  margin-bottom: 10px;
  border: none;
  background: #fff;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.tool-icon:hover {
  background: #eee;
}

/* Ping animation */
@keyframes pingAnimation {
  0% {
    transform: scale(0.3);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* The main resizer handle in SplitPane */
.Resizer {
  background: #ccc;
  cursor: col-resize;
  width: 4px;
  z-index: 500; /* Ensure resizer is above tabletop content */
}

.Resizer:hover {
  background: #999;
}

/* Ping component styles */
.ping-container {
  position: absolute;
  pointer-events: none; /* Cannot interact with pings */
  will-change: transform, opacity;
}

.ping-outer {
  position: absolute;
  width: 60px; /* Size of the outer ring */
  height: 60px;
  border-radius: 50%;
  border: 2px solid; /* Color set by component */
  transform: translate(-50%, -50%); /* Center on position */
  opacity: 0.5;
  animation: pingAnimation 2s ease-out forwards;
}

.ping-inner {
  position: absolute;
  width: 10px; /* Size of the inner dot */
  height: 10px;
  border-radius: 50%;
  background-color: ; /* Color set by component */
  transform: translate(-50%, -50%); /* Center on position */
  opacity: 1;
  animation: pingAnimation 2s ease-out forwards;
}

/* DM Tools area styles */
.dm-tools-area {
    padding: 16px;
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.dm-tools-area button {
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    text-align: center;
}

.dm-tools-area .btn-combat-start {
    background-color: #28a745; /* Green */
    color: white;
}
.dm-tools-area .btn-combat-end {
    background-color: #dc3545; /* Red */
    color: white;
}
.dm-tools-area .btn-grid-toggle {
    background-color: #6c757d; /* Gray */
    color: white;
}

.dm-tools-area select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}
.dm-tools-area label {
    font-size: 0.9em;
    font-weight: bold;
    color: #555;
}


/* Scrollbar styles (optional) */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}


/* Styles for the SplitPane resizer handle */
.Resizer {
  background: #ccc;
  opacity: 0.2;
  z-index: 1;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-clip: padding-box;
}

.Resizer:hover {
  -webkit-transition: all 2s ease;
  transition: all 2s ease;
  background: #000;
  opacity: 0.5;
}

.Resizer.vertical {
  width: 11px;
  margin: 0 -5px;
  border-left: 5px solid rgba(255, 255, 255, 0);
  border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
}

.Resizer.vertical:hover {
  border-left: 5px solid rgba(0, 0, 0, 0.5);
  border-right: 5px solid rgba(0, 0, 0, 0.5);
}

.Resizer.disabled {
  cursor: not-allowed;
}
.Resizer.disabled:hover {
  border-color: transparent;
}
